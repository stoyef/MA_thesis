% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/HMM_mllk.R
\name{mllk}
\alias{mllk}
\title{Compute negative (penalized) log-likelihood of an AR(p)-HMM}
\usage{
mllk(
  theta.star,
  dists,
  x,
  N,
  p_auto,
  lambda = 0,
  scale_kappa = 1,
  zero_inf = FALSE
)
}
\arguments{
\item{theta.star}{Vector of parameters in the following order: 1) Off-diagonal entries of TPM,
2) Distribution parameters for each state (each distribution at a time, i.e. 
first all parameters of dist1, then all parameters of dist2 etc.), 
3) Autoregression parameters (each distribution at a time, i.e. 
first all autoregression parameters of dist1, then all autocorrelation 
parameters of dist2 etc.) -> degree parameters for each state of each variable.}

\item{dists}{Vector containing abbreviated names (in R-jargon) of the distributions 
to be considered in the likelihood computation.}

\item{x}{Data vector or matrix for which the negative log-likelihood should be computed.}

\item{N}{Number of states.}

\item{p_auto}{Vector of autoregression degrees, one value for each state of each variable 
(in case of penalization choose upper bound of number of parameters).}

\item{lambda}{Complexity penalty (â‰¥0) for autoregression parameters \eqn{\phi}.(default: 0 no penalization).}

\item{scale_kappa}{Default 1, Scaling factor for kappa to avoid numerical issues in optimization for large kappa.}

\item{zero_inf}{Default FALSE, indicates if the gamma distributed variables should incorporate zero-inflation.}
}
\value{
Negative (penalized) log-likelihood.
}
\description{
Compute the negative log-likelihood, using one or several specified distributions.
The distributions have to be specified by their commonly known abbreviation in R, 
e.g. one of ['gamma', 'vm', 'pois', 'binom',...].
The named list of parameters (one value for each parameter and for each state) have to be
in suitable form, i.e. a vector of the working parameters.
In the likelihood computation, contemporaneous independence is assumed.
Includes an optional penalization term \eqn{\lambda} for parameter selection of \eqn{p}.
}
