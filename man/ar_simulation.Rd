% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/HMM_sim_functions.R
\name{ar_simulation}
\alias{ar_simulation}
\title{Simulation of AR(p)-HMMs}
\usage{
ar_simulation(
  model_sim,
  model_fit,
  N_sim,
  N_fit,
  n_samples,
  Gamma_sim,
  delta_sim,
  param_sim,
  autocor_sim = 0,
  estimate_states = TRUE,
  plot_it = TRUE
)
}
\arguments{
\item{model_sim}{Form of simulated data in a list: First entry is vector containing 
abbreviated names (in R-jargon) of the distributions 
the data should be sampled from. Second entry is 
vector of degree of autoregression for each distribution, 
0 = no autoregression}

\item{model_fit}{Form of fitted data in a list: First entry is vector containing 
abbreviated names (in R-jargon) of the distributions 
to be considered in the likelihood computation. Second entry is 
vector of degree of autoregression for each distribution, 
0 = no autoregression}

\item{N_sim}{Number of states of the HMM used for data generation.}

\item{N_fit}{Number of states of the HMM used for fitting the data.}

\item{n_samples}{Number of samples to be generated.}

\item{Gamma_sim}{Full transition probability matrix of simulated data.}

\item{delta_sim}{Initial distribution of simulated data.}

\item{param_sim}{Parameter vector for parameters of the simulated data. In a vector form,
and in the order that is customary: e.g. for a gamma HMM c(\eqn{\mu_1,\mu_2,\sigma_1,\sigma_2}).
The order of distributions has to be the same as in model_sim.}

\item{autocor_sim}{List of parameter matrix (Dimensions for each matrix: \eqn{n\times p}) for the autocorrelation coefficients. 
 Has to match p, in the order \eqn{\phi_{t-p},\dots,\phi_{t-1}}
 where \eqn{\phi} is the vector of autocorrelation coefficients
for one specific time lag (one value for each state).
0, if no autocorrelation. Has to respect the order specified in \code{model_sim}.}

\item{estimate_states}{Bool, determines if states are estimated and returned
using Viterbi.}

\item{plot_it}{Bool, determines if resulting densities are plotted.}
}
\value{
List of fitted model and its parameters (and optional the decoded states).
}
\description{
Top to bottom wrapper function: Simulate from a specified AR(p)-HMM, fit a specified
AR(p)-HMM to the resulting data and return the output. Optionally: Also return the 
decoded states using the Viterbi algorithm. Optionally: Also plot the resulting 
densities of the weighted state-dependent distributions using state-stationary values.
}
