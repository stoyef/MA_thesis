% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/HMM_sim_functions.R
\name{gamma_simulation}
\alias{gamma_simulation}
\title{Simulate gamma HMMs with and without autocorrelation}
\usage{
gamma_simulation(
  model_sim,
  model_fit,
  N_sim,
  N_fit,
  n_samples,
  Gamma_sim,
  delta_sim,
  mu_sim,
  sigma_sim,
  autocor_sim = 0,
  estimate_states = TRUE,
  plot_it = TRUE
)
}
\arguments{
\item{model_sim}{Int, Form of simulated data: Degree of autocorrelation 
(0 - no autocorrelation).}

\item{model_fit}{Int, Form of fitted model: Degree of autocorrelation 
(0 - no autocorrelation).}

\item{N_sim}{Number of states of the HMM used for data generation.}

\item{N_fit}{Number of states of the HMM used for data generation.}

\item{n_samples}{Number of samples generated.}

\item{Gamma_sim}{Full transition probability matrix of simulated data.}

\item{delta_sim}{Initial distribution of simulated data.}

\item{mu_sim}{Parameter vector for mu of simulated data.}

\item{sigma_sim}{Parameter vector for sigma of simulated data.}

\item{autocor_sim}{Vector of autocorrelation coefficients of simulated data (if there are any).}

\item{estimate_states}{Bool, determines if states are estimated and returned
using Viterbi.}

\item{plot_it}{Bool, determines if resulting densities are plotted.}
}
\value{
List of Fitted model and its parameters (and optional the decoded states).
}
\description{
Top to bottom wrapper function: Simulate from a specified HMM, fit a specified
HMM to the resulting data and return the output. Optionally: Also return the 
decoded states using the Viterbi algorithm. Optionally: Also plot the resulting 
density functions of the weighted gamma distributions.
}
